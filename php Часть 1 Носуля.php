<?php
//1)c помощью функции list вывести в переменной  vegetable первый элемент массива - помидор.

$box = array('помидор','яблоко');

list($vegetable, $fruit) = $box;
echo $vegetable ."\n";

//2)Вывести количество элементов массива 

$box = array(1 => 'помидор', '2' => 'яблоко', '1key' => 'груша', 'персик', true => 'апельсин');

echo count($box) ."\n";

//3) Что выведется?

$a=10;
$b=&$a;
 
unset ($a);

echo $b ."\n";

// Выведет 10 так как $a это тоже самое что $b из-за $b=&$a;
// примечание unset ($a) удаляет переменную $a


//4) Что будет, если сравнить две переменные?
   $var1 = 4;
   $var2 = '4';

var_dump($var1 == $var2);

// так будет true так как в даном сровнение принебрежет разными форматами и переведет строку в инт или наоборот
// примечание var_dump — Выводит информацию о переменной

//а если   

var_dump($var1 === $var2);

// А так будет false так как сдесь не будет принибрежения форматом при сравнении, сравнивается инт и стринг

//5) Что будет в результате сравнения?

var_dump('hi' >= 'hi');

// true так как hi = hi что удовлитворяет условие

//6) Сложить 4 с третьим элементом массива. Вывести результирующий массив?
//Вопрос третий элемент или элемент масива под номером 3, так как первый будет 0

$A=array(1,6,'2.2e2',14);

// Решение
$A[3] = $A[3]+4;
print_r($A); // или через var_export или var_dump
var_export($A);
var_dump($A);

//7) Вывести кол-во повторений каждого элемента в массиве:

$B=array("pen", "pensil", "pen", "book", "pensil");

print_r(array_count_values($B));

//8) Как необходимо изменить инициализацию массива, чтобы значение "California" имело индекс=4 без явного задания 4 => "California":
//Как бы костыль $states_of_the_USA=array("Alabama", "Colorado", 3 =>"Hawaii", "California"); но соответствует заданию)))

$states_of_the_USA=array("Alabama", "Colorado", "Hawaii", "California");

//Вариант номер два
$states_of_the_USA = array_combine(array(1, 2, 3, 4), $states_of_the_USA);
print_r($states_of_the_USA);



//9) Вывести все элементы массива с помощью цыкла for:

$states_of_the_USA=array("Alabama", "Colorado", "Hawaii", "California");
for ($i = 0; $i <= count($states_of_the_USA)-1; $i++)
{
    echo $states_of_the_USA[$i] . "\n";
}


//10) Что выведется в данном примере?

  $A=array(1, 2, 4, 6);

  unset($A);

  if (isset($A)) echo "Массив определен";
  else echo "Массив не определен";
// Выведится 'Массив не определен', так как использовалась функция unset().";


//11) Что выведется в случае а) и в случае б) в var_dump($var)? Почему?
//а) $var= var1 + var2
//б) $var= var2 + var1 


$var1 = array(0 => "car", 1 => "bicycle", 3 => "auto");
$var2 = array("bike", "bicycle", "car");

//Будет ошибка ))) так как надо добавить по $ к переменным var1 и var2. А если серьезно то:
/*а) Array
(
    [0] => car
    [1] => bicycle
    [3] => auto
    [2] => car
)
b) Array
(
    [0] => bike
    [1] => bicycle
    [2] => car
    [3] => auto
)
*/
//Оператор + возвращает левый массив, к которому был присоединен правый массив. Для ключей, которые существуют в обоих массивах, будут использованы значения из левого массива, а соответствующие им элементы из правого массива будут проигнорированы." . "\n";

//12)Что выведется в данном случае и почему?

$A = 3;
for ($k=0; $k<3; $k++) {
   echo $A-- . "\n";
}
/*
3
2
1
Потому что оператор -- стоящий после переменной сначало вернет значение переменной и только потом изменит (отнимит 1) его
*/

//13) Что выведет var_dump($var1 == $var2)?

$var1 = array("pen","pencil", "table");
$var2 = array(1 => "pencil", 2 => "table", 0 => "pen");

var_dump($var1 == $var2);
echo "Выведет bool(true) так как по факту значения в масивах одинаковы в первом случае 0 => 'pen', 1 => 'pencil', 2 => 'table' и во втором, там ключи указаны";


//14) Вывести фразу "You are beautiful" используя строковый оператор.

echo "You " . "are" . " beautiful";

//15) Чему будет равна $var2 ?

$var1 = 3;
$var2 = &$var1; 

$var2=50;
echo $var1;

// $var2 будет равен 50 так же как и $var1

//16) Тремя способами преобразовать переменную $var в строку.

/*
strval($var);
settype($var, "string");
echo($var) или print($var)
*/


//17) Используя функцию settype, придать переменной $a значение 1, если $a="123a";

$a="123a";
if ($a === "123a")
    echo settype($a, "string");


//18)Преобразовать $a="abradсabra" в "abracbra"(удалить символ "d" и третью букву "a").

$a = 'abradcabra';
$k = 0;
$arr = str_split($a);
unset ($arr[array_search('d', $arr)]);

foreach ($arr as $key => $d) {
    if ($d === "a") {
        $k++;
        if ($k == 3)
            unset($arr[$key]);
    }
}
$a = implode ("", $arr);
echo $a;

//19) Какие ключи и значения содержит массив $c?

$a=1;
$p="a";
define("b",2);

$c[]=$p;
$c[$p]=$a;
$c[b]=$p;
$c[]="a";
$c[$a]=b;

for($i=0; $i<=b; $i++)
{
        if($c[$i]=="a")
        {
                $c[$i]="aa";
                break;
        }
}

/*
[0] => "aa"
[a] => 1
[2] => "a"
[3] => "a"
[1] => 2
*/

//20) Разработать функцию вычисления факториала заданного числа (n!)

function factorial ($n) {
    $result = $n;
    for ($i = $n-1; $i > 0; $i--)
    {
        $result *= $i;
    }
    return $result;
}
echo factorial (10); // вывод для проверки работы

// 21) Отсортировать массивы: Имена в алфавитном порядке, в порядке убывания, а возраст в порядке возростания


$spisok = array(
   'roz1' => array('id'=>'1', 'age'=>'19', 'gender'=>'m', 'login'=>'Kos'),
   'roz2' => array('id'=>'2', 'age'=>'12', 'gender'=>'m', 'login'=>'Oleg'),
   'roz3' => array('id'=>'3', 'age'=>'17', 'gender'=>'g', 'login'=>'Sasha'),
   'roz4' => array('id'=>'4', 'age'=>'14', 'gender'=>'m', 'login'=>'Roma'),
   'roz5' => array('id'=>'5', 'age'=>'15', 'gender'=>'g', 'login'=>'Galina'),
   'roz6' => array('id'=>'6', 'age'=>'16', 'gender'=>'g', 'login'=>'Nadi'),
   'roz7' => array('id'=>'7', 'age'=>'13', 'gender'=>'g', 'login'=>'Evgenia'),
   'roz8' => array('id'=>'8', 'age'=>'18', 'gender'=>'m', 'login'=>'Sveta'),
   'roz9' => array('id'=>'9', 'age'=>'11', 'gender'=>'g', 'login'=>'Julia'),
);
/**Цикл foreach оперирует не исходным массивом, а его копией. Это означает, что любые изменения, которые вносятся в массив,
*не могут быть "видны" из тела цикла. Что позволяет, например, в качестве массива использовать не только переменную,
*но и результат работы какой-нибудь функции, возвращающей массив (в этом случае функция будет вызвана всего один раз - до
*начала цикла, а затем работа будет производиться с копией возвращенного значения).
*
* Пример
* foreach (массив as $значение)
* команды;
*/

//Сейчас можно обойтись без foreach вот так:
$login = array_column($spisok, 'login');
$age = array_column($spisok, 'age');
array_multisort($login, SORT_DESC, $age, SORT_ASC, $spisok);
print_r($spisok); // вывод для проверки

// 22) Условные операторы if, else, if

/**
*1. Создать переменную $age  и присвоить ей произвольное числовое значение.
*
*2. Написать конструкцию if, которая выводит фразу: "Вам ещё батрачить и батрачить", если значение $age будет от 18 до 59 включительно(Использовать знак больше или равно, а также меньше или ровно).
*
*3. Расширить конструкцию if, выводя фразу: "Хорош пахать", если $age больше 59.
*
*4. Расширить конструкцию if-else, выводя фразу: "Мал, еще работать - иди учись!", если $age от 1 до 17 включительно (Использовать знак строго больше, а также строго меньше).
*
*5. Дополнить конструкцию if-elseif, выводя фразу: "Ты паранормален!", если $age не попадает ни в один диапозон.
*/

$age = rand(0, 100); // 0 для "Ты паронормален!" ну и ограничел 100, чтобы выпадали другие варики.
echo $age . "\n"; // вывод для проверки
if ($age >= 1){
    if ($age <= 17){
        echo 'Мал, еще работать - иди учись!';
    } elseif ($age <= 59) {
        echo 'Вам ещё батрачить и батрачить';
    } else echo 'Хорош пахать';
} else echo 'Ты паранормален!';


//23) Используя цикл for вывести все нечётные числа от 1 до 59 (в столбик)

for ($i=1; $i<=59;$i++)
{
    if ($i%2 == 0) echo $i . "\n";
}

//24) Создать константу и присвоить ей значение. Проверить: * присвоилось ли занчение константе, * вывести значение, * попытаться изменить значение.
//Пример создания константы
define ("SUPER_CONSTANT", "Тестеры - лучшие!");
if (SUPER_CONSTANT === "Тестеры - лучшие!") echo 'Константа содержит - "Тестеры - лучшие!"' . "\n";
echo 'Пробуем изменить константу' . "\n";
$SUPER_CONSTANT = "Разрабы - лучшие!";
if (SUPER_CONSTANT === "Тестеры - лучшие!") echo 'Пффф... Тестеры - лучшие!';

//25) Задан массив $arr= array(0=>1, 1=>-3, 2=>-9, 4=>1, 5=>3, 6=>12, 7=>-1, 8=>0). Вычислить сумму всех элементов массива с нечетными индексами.
$arr= array(0=>1, 1=>-3, 2=>-9, 4=>1, 5=>3, 6=>12, 7=>-1, 8=>0);
$sum = 0;
foreach ($arr as $key => $n)
{
    if ($key%2 != 0) $sum += $n;
}
echo $sum;

//26) Задан массив $arr= array(0=>1.2, 1=>3, 2=>-3.2, 4=>1.34, 5=>-0.3, 6=>1.2, 7=>1.93, 8=>0.67). Отсортировать и вывести массив по возрастанию элементов.
$arr= array(0=>1.2, 1=>3, 2=>-3.2, 4=>1.34, 5=>-0.3, 6=>1.2, 7=>1.93, 8=>0.67);
sort($arr);
print_r($arr);

//27) Задан массив $arr= array(0=>1, 1=>-2, 2=>-9, 4=>3, 5=>1, 6=>12, 7=>-1, 8=>0). Найти максимальный и минимальный элементы массива и вывести их.
$arr= array(0=>1, 1=>-2, 2=>-9, 4=>3, 5=>1, 6=>12, 7=>-1, 8=>0);
echo 'min = ' . min($arr) . "\n" . 'max = ' . max($arr);

//28) В перерменной $year можно задать значение года в диапазоне от 0 до 9999. Определить, является ли год, заданый в $year високосным.
$year = rand (0, 9999);
if ($year%4 != 0) {
    echo 'Год обычный';
} elseif ($year%100 != 0) {
    echo 'Высокосный год';
} elseif ($year%400 == 0) {
    echo 'Высокосный год';
} else echo 'Год обычный';
echo $year;

//29) В массиве содержится 5 чисел. Вывести произведение числа на его квадрат в виде 2^2=4.
$arr= [
    '1' =>rand(1, 100),
    '2' =>rand(1, 100),
    '3' =>rand(1, 100),
    '4' =>rand(1, 100),
    '5' =>rand(1, 100)
];
print_r($arr); // для проверки

foreach ($arr as $n)
    echo '2^2=' . pow($n, 2) . "\n";

/*
* 30) Измените "W" из строки $string на "Q".
* Не используйте строковые функции.
*/

$string = 'Winter is coming!';

$arr = str_split($string);
$arr[0] = 'Q';
$string = implode ($arr);
echo $string; // для проверки

/*
* 31) Выведите значение переменной $string, используя символическую ссылку.
*/

$s = &$string;
echo $s;

/*
* 32) Выведите в браузере текстовое поле с заполеннным в нем значением $string.
* В одну строчку.
*/

/*
 * ОТВЕТ:
<html>
      <?php
      echo $string;
      ?>
</html>
*/


/*
* 33) Выведите cумму всех цифр в числе $int.
* Используйте цикл while или do while
*/

$int = '01123581321';

$sum = 0;
$i=0;
while ($i < strlen($int))
{
    $sum += (int)$int{$i};
    $i++;
}
echo $sum;

/*
* 34) Назовите пары ключ\значение в массиве $array.
* Добавьте значение 'Jeanne d'Arc' в массив NULL.
* Используйте теги "<pre>" для структурированного отображения.
* Выведите массив 3-мя различными способами.
*/

$array = array(FALSE => TRUE, TRUE => FALSE, NULL => array(PHP_OS, "PHP_VERSION"));

/* Назовите пары ключ\значение в массиве $array:
[0] => 1  //Такие значения будут так как FALSE в стринге будет 0, TRUE в стринге будет 1, ну а NULL будет "пусто".
[1] =>
[] => Array
        (
            [0] => Linux        //ключи 0 и 1 так как они явно не определены и назначаются по порядку от 0
            [1] => PHP_VERSION
        )
)
*/

$array[""][2] = "Jeanne d'Arc";

print_r($array);
var_export($array);
var_dump($array);

